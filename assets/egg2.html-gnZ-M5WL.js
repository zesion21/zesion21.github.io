import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as e,b as a}from"./app-CFuNIExP.js";const n={},t=a(`<h2 id="运行环境" tabindex="-1"><a class="header-anchor" href="#运行环境"><span>运行环境</span></a></h2><p>一个 Web 应用本身应该是无状态的，并拥有根据运行环境设置自身的能力。<br> 原文档地址：<a href="https://eggjs.org/zh-cn/basics/env.html" target="_blank" rel="noopener noreferrer">运行环境</a></p><h2 id="指定运行环境" tabindex="-1"><a class="header-anchor" href="#指定运行环境"><span>指定运行环境</span></a></h2><p>通过 <code>config/env</code> 文件指定，该文件的内容就是运行环境，如 <code>prod</code>。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;--shiki-dark-bg:#272822;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes monokai one-light vp-code"><code><span class="line"><span>// config/env</span></span>
<span class="line"><span>prod</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="应用内获取运行环境" tabindex="-1"><a class="header-anchor" href="#应用内获取运行环境"><span>应用内获取运行环境</span></a></h2><p>框架提供了变量<code>app.config.env</code>来表示应用当前的运行环境。</p><h2 id="自定义环境" tabindex="-1"><a class="header-anchor" href="#自定义环境"><span>自定义环境</span></a></h2><p>常规开发流程可能不仅仅只有以上几种环境，Egg 支持自定义环境来适应自己的开发流程。</p><p>比如，要为开发流程增加集成测试环境 SIT。将 <code>EGG_SERVER_ENV</code> 设置成 sit（并建议设置 N<code>ODE_ENV = production</code>），启动时会加载 <code>config/config.sit.js</code>，运行环境变量 <code>app.config.env</code> 会被设置成 sit。</p><h2 id="config-配置" tabindex="-1"><a class="header-anchor" href="#config-配置"><span>Config 配置</span></a></h2><p>框架提供了强大且可扩展的配置功能，可以自动合并应用、插件、框架的配置，按顺序覆盖，且可以根据环境维护不同的配置。合并后的配置可直接从 <code>app.config</code> 获取</p><h3 id="多环境配置" tabindex="-1"><a class="header-anchor" href="#多环境配置"><span>多环境配置</span></a></h3><p>框架支持根据环境来加载配置，定义多个环境的配置文件，具体环境请查看<a href="https://eggjs.org/zh-cn/basics/env.html" target="_blank" rel="noopener noreferrer">运行环境配置</a></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;--shiki-dark-bg:#272822;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes monokai one-light vp-code"><code><span class="line"><span>config</span></span>
<span class="line"><span>|- config.default.js</span></span>
<span class="line"><span>|- config.prod.js</span></span>
<span class="line"><span>|- config.unittest.js</span></span>
<span class="line"><span>\`- config.local.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>config.default.js</code> 为默认的配置文件，所有环境都会加载这个配置文件，一般也会作为开发环境的默认配置文件。<br> 当指定 env 时会同时加载默认配置和对应的配置(具名配置)文件，具名配置和默认配置将合并(使用 extend2 深拷贝)成最终配置，具名配置项会覆盖默认配置文件的同名配置。如 <code>prod</code> 环境会加载 <code>config.prod.js</code> 和 <code>config.default.js </code>文件，<code>config.prod.js</code> 会覆盖 <code>config.default.js</code> 的同名配置。</p><h3 id="配置写法" tabindex="-1"><a class="header-anchor" href="#配置写法"><span>配置写法</span></a></h3><p>配置文件返回的是一个 object 对象，可以覆盖框架的一些配置，应用也可以将自己业务的配置放到这里方便管理。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;--shiki-dark-bg:#272822;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes monokai one-light vp-code"><code><span class="line"><span style="--shiki-dark:#88846F;--shiki-light:#A0A1A7;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">// 配置 logger 文件的目录，logger 默认配置由框架提供</span></span>
<span class="line"><span style="--shiki-dark:#66D9EF;--shiki-light:#E45649;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">module</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#66D9EF;--shiki-light:#E45649;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">exports</span><span style="--shiki-dark:#F92672;--shiki-light:#0184BC;"> =</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#E45649;">  logger</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#E45649;">    dir</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#E6DB74;--shiki-light:#50A14F;"> &quot;/home/admin/logs/demoapp&quot;</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">  },</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件也可以简化的写成 <code>exports.key = value</code> 形式</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;--shiki-dark-bg:#272822;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes monokai one-light vp-code"><code><span class="line"><span style="--shiki-dark:#66D9EF;--shiki-light:#E45649;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">exports</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#E45649;">keys</span><span style="--shiki-dark:#F92672;--shiki-light:#0184BC;"> =</span><span style="--shiki-dark:#E6DB74;--shiki-light:#50A14F;"> &quot;my-cookie-secret-key&quot;</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#66D9EF;--shiki-light:#E45649;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">exports</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#E45649;">logger</span><span style="--shiki-dark:#F92672;--shiki-light:#0184BC;"> =</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#E45649;">  level</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#E6DB74;--shiki-light:#50A14F;"> &quot;DEBUG&quot;</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件也可以返回一个 function，可以接受 appInfo 参数</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;--shiki-dark-bg:#272822;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes monokai one-light vp-code"><code><span class="line"><span style="--shiki-dark:#88846F;--shiki-light:#A0A1A7;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic;">// 将 logger 目录放到代码目录下</span></span>
<span class="line"><span style="--shiki-dark:#66D9EF;--shiki-light:#A626A4;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">const</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#986801;"> path</span><span style="--shiki-dark:#F92672;--shiki-light:#0184BC;"> =</span><span style="--shiki-dark:#A6E22E;--shiki-light:#4078F2;"> require</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E6DB74;--shiki-light:#50A14F;">&quot;path&quot;</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">);</span></span>
<span class="line"><span style="--shiki-dark:#66D9EF;--shiki-light:#E45649;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">module</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#66D9EF;--shiki-light:#E45649;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">exports</span><span style="--shiki-dark:#F92672;--shiki-light:#0184BC;"> =</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;"> (</span><span style="--shiki-dark:#FD971F;--shiki-light:#383A42;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">appInfo</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">) </span><span style="--shiki-dark:#66D9EF;--shiki-light:#A626A4;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit;">=&gt;</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F92672;--shiki-light:#A626A4;">  return</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#E45649;">    logger</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#E45649;">      dir</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;"> path.</span><span style="--shiki-dark:#A6E22E;--shiki-light:#4078F2;">join</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">(appInfo.</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#E45649;">baseDir</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E6DB74;--shiki-light:#50A14F;">&quot;logs&quot;</span><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">),</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">    },</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">  };</span></span>
<span class="line"><span style="--shiki-dark:#F8F8F2;--shiki-light:#383A42;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),l=[t];function h(p,r){return e(),s("div",null,l)}const o=i(n,[["render",h],["__file","egg2.html.vue"]]),c=JSON.parse('{"path":"/article/node/2021/egg2.html","title":"Egg 学习笔记（二） 之 运行环境 与 配置","lang":"zh-CN","frontmatter":{"title":"Egg 学习笔记（二） 之 运行环境 与 配置","date":"2021-07-29T00:00:00.000Z","tags":["egg"],"categories":["Node"],"description":"运行环境 一个 Web 应用本身应该是无状态的，并拥有根据运行环境设置自身的能力。 原文档地址：运行环境 指定运行环境 通过 config/env 文件指定，该文件的内容就是运行环境，如 prod。 应用内获取运行环境 框架提供了变量app.config.env来表示应用当前的运行环境。 自定义环境 常规开发流程可能不仅仅只有以上几种环境，Egg 支持...","head":[["meta",{"property":"og:url","content":"http://zesionlee.cn/article/node/2021/egg2.html"}],["meta",{"property":"og:site_name","content":"全栈笔记"}],["meta",{"property":"og:title","content":"Egg 学习笔记（二） 之 运行环境 与 配置"}],["meta",{"property":"og:description","content":"运行环境 一个 Web 应用本身应该是无状态的，并拥有根据运行环境设置自身的能力。 原文档地址：运行环境 指定运行环境 通过 config/env 文件指定，该文件的内容就是运行环境，如 prod。 应用内获取运行环境 框架提供了变量app.config.env来表示应用当前的运行环境。 自定义环境 常规开发流程可能不仅仅只有以上几种环境，Egg 支持..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-31T09:25:21.000Z"}],["meta",{"property":"article:author","content":"阿琛"}],["meta",{"property":"article:tag","content":"egg"}],["meta",{"property":"article:published_time","content":"2021-07-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-31T09:25:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Egg 学习笔记（二） 之 运行环境 与 配置\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-07-29T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-31T09:25:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"阿琛\\",\\"url\\":\\"http://zesionlee.cn\\"}]}"]]},"headers":[{"level":2,"title":"运行环境","slug":"运行环境","link":"#运行环境","children":[]},{"level":2,"title":"指定运行环境","slug":"指定运行环境","link":"#指定运行环境","children":[]},{"level":2,"title":"应用内获取运行环境","slug":"应用内获取运行环境","link":"#应用内获取运行环境","children":[]},{"level":2,"title":"自定义环境","slug":"自定义环境","link":"#自定义环境","children":[]},{"level":2,"title":"Config 配置","slug":"config-配置","link":"#config-配置","children":[{"level":3,"title":"多环境配置","slug":"多环境配置","link":"#多环境配置","children":[]},{"level":3,"title":"配置写法","slug":"配置写法","link":"#配置写法","children":[]}]}],"git":{"createdTime":1722325759000,"updatedTime":1722417921000,"contributors":[{"name":"zesionlee","email":"39211025+zesion21@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":2.03,"words":609},"filePathRelative":"article/node/2021/egg2.md","localizedDate":"2021年7月29日","excerpt":"<h2>运行环境</h2>\\n<p>一个 Web 应用本身应该是无状态的，并拥有根据运行环境设置自身的能力。<br>\\n原文档地址：<a href=\\"https://eggjs.org/zh-cn/basics/env.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">运行环境</a></p>\\n<h2>指定运行环境</h2>\\n<p>通过 <code>config/env</code> 文件指定，该文件的内容就是运行环境，如 <code>prod</code>。</p>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-dark:#F8F8F2;--shiki-light:#383A42;--shiki-dark-bg:#272822;--shiki-light-bg:#FAFAFA\\"><pre class=\\"shiki shiki-themes monokai one-light vp-code\\"><code><span class=\\"line\\"><span>// config/env</span></span>\\n<span class=\\"line\\"><span>prod</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{o as comp,c as data};
